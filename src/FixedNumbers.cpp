#include "Font.hpp"
#include "Utils.hpp"
#include "extern/stddef.hpp"

extern "C"
{
    CustomFont myFont = {
        .height       = 12,
        .isWide       = false,
        .mappingCount = 12,
    };

    GlyphMapping myMapping[12] = {
        {.codepoint = 0x30, .index = 0},
        {.codepoint = 0x20, .index = 1},
        {.codepoint = 0x31, .index = 2},
        {.codepoint = 0x32, .index = 3},
        {.codepoint = 0x33, .index = 4},
        {.codepoint = 0x34, .index = 5},
        {.codepoint = 0x35, .index = 6},
        {.codepoint = 0x36, .index = 7},
        {.codepoint = 0x37, .index = 8},
        {.codepoint = 0x38, .index = 9},
        {.codepoint = 0x39, .index = 10},
        {.codepoint = 0xffff, .index = 11},
    };

    FixedGlyph myGlyphs[12] = {
        {.width = 6, .rows = {0xff, 0x8f, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x8f, 0xff, 0xff}},
        {.width = 6, .rows = {0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff}},
        {.width = 6, .rows = {0xff, 0xdf, 0x9f, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0x07, 0xff, 0xff}},
        {.width = 6, .rows = {0xff, 0x0f, 0xf7, 0xf7, 0xf7, 0xcf, 0xbf, 0x7f, 0x7f, 0x07, 0xff, 0xff}},
        {.width = 6, .rows = {0xff, 0x0f, 0xf7, 0xf7, 0xf7, 0x8f, 0xf7, 0xf7, 0xf7, 0x0f, 0xff, 0xff}},
        {.width = 6, .rows = {0xff, 0x77, 0x77, 0x77, 0x77, 0x07, 0xf7, 0xf7, 0xf7, 0xf7, 0xff, 0xff}},
        {.width = 6, .rows = {0xff, 0x07, 0x7f, 0x7f, 0x7f, 0x0f, 0xf7, 0xf7, 0xf7, 0x0f, 0xff, 0xff}},
        {.width = 6, .rows = {0xff, 0x8f, 0x7f, 0x7f, 0x7f, 0x0f, 0x77, 0x77, 0x77, 0x8f, 0xff, 0xff}},
        {.width = 6, .rows = {0xff, 0x07, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xff, 0xff}},
        {.width = 6, .rows = {0xff, 0x8f, 0x77, 0x77, 0x77, 0x8f, 0x77, 0x77, 0x77, 0x8f, 0xff, 0xff}},
        {.width = 6, .rows = {0xff, 0x8f, 0x77, 0x77, 0x77, 0x07, 0xf7, 0xf7, 0xf7, 0x8f, 0xff, 0xff}},
        {.width = 6, .rows = {0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff}},
    };

    FixedGlyph* getFixedGlyph(uint16_t codepoint)
    {
        for (int32_t i = 0; i < myFont.mappingCount; i++)
        {
            if (myMapping[i].codepoint == codepoint) return &myGlyphs[myMapping[i].index];
        }

        return &myGlyphs[myFont.mappingCount - 1];
    }

    static uint8_t getWidthCustom(uint16_t codepoint)
    {
        return getFixedGlyph(codepoint)->width;
    }

    static uint16_t getRowCustom(uint16_t codepoint, uint8_t row)
    {
        if (row > myFont.height) return 0;

        return getFixedGlyph(codepoint)->rows[row] << 8;
    }

    static uint16_t getCodePointCustom(const uint8_t* string, uint32_t index)
    {
        const uint8_t* ptr = jis_at_index(string, index);
        uint8_t firstByte  = *ptr;
        return firstByte;
    }

    Font fixedNumbersFont = {
        .height       = 12,
        .getWidth     = getWidthCustom,
        .getRow       = getRowCustom,
        .getCodePoint = getCodePointCustom,
    };
}